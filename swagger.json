{
  "swagger": "2.0",
  "info": {
    "description": "The internet is increasingly becoming an integral part of lives. Ever since the invention of electronic mail by Ray Tomlinson, emails have grown to become the primary medium of exchanging information over the internet between two or more people, until the advent of Instant Messaging (IM) Apps.",
    "version": "1.0.0",
    "title": "EPIC Mail",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "victor.chinewubeze@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "epic-mail-web-app.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "user",
      "description": "Create account and login"
    },
    {
      "name": "messages",
      "description": "Send and receive messages online"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Add a new user",
        "description": "This API creates a new account",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information needed to create a user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Email is required"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign in a user",
        "description": "This API signs in a user",
        "operationId": "loginUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information needed to login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Email is required"
          }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Create a new message",
        "description": "This API creates a new message",
        "operationId": "createMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information needed to create message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "Subject field cannot be empty"
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get all received messages",
        "description": "This API gets all received messages",
        "operationId": "getMessages",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetResponse"
            }
          }
        }
      }
    },
    "/messages/unread": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get all unread messages",
        "description": "This API gets all unread messages",
        "operationId": "getUnread",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetResponse"
            }
          }
        }
      }
    },
    "/messages/sent": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get all sent messages",
        "description": "This API gets all sent messages",
        "operationId": "getSent",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetResponse"
            }
          }
        }
      }
    },
    "/messages/{messageId}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get a specific message",
        "description": "This API gets a specific message",
        "operationId": "getOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "messageId",
            "description": "Id of the message to be retrieved",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetResponse"
            }
          },
          "404": {
            "description": "Message does not exist"
          }
        }
      },
      "delete": {
        "tags": [
          "Messages"
        ],
        "summary": "Deletes a specific message",
        "description": "This API deletes a specific message",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "messageId",
            "description": "Id of the message to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "404": {
            "description": "Message does not exist"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateUser": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "object",
          "items": {
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "password": {
                "type": "string",
                "format": "password"
              }
            }
          }
        }
      }
    },
    "CreateMessage": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "PostResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "object",
          "items": {
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "subject": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "GetResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "object",
          "items": {
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "subject": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "DeleteResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "object",
          "items": {
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "subject": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}